:load basics

empty = #<>

xs = !0
len = Cn[Get, #0, xs]

n = !0
xs = !1
setlen = Cn[Set, #0, n, xs]

i = !0
xs = !1
ent = Cn[Get, Cn[S, i], xs]

i = !0
x = !1
xs = !2
setent = Cn[Set, Cn[S, i], x, xs]

xs = !0
x = !1
append = Cn[setent, len, x, Cn[setlen, Cn[S, len], xs]]

i = !0
xs = !1
mapent = Cn[setent, i, Cn[@0, Cn[ent, i, xs]], xs]

xs = !0
map = Cn[Pr[!0, Cn[mapent[@0], !1, !0]], len, xs]

xs = !0
ys = !1
concat = Cn[Pr[!0, Cn[append, !0, Cn[ent, !1, !3]]], Cn[len, ys], xs, ys]

if2 = Cn[Pr[@2, Cn[@1, !2, !3]], @0, !0, !1]

xs = !0
filter =
    Cn[
        Pr[empty,
            Cn[
                if2[Cn[@0, !0],
                    Cn[append, !1, !0],
                    !1
                ],
                Cn[ent, !1, !2],
                !0
            ]
        ],
        len,
        !0
    ]

filter[!0](<6, 2, 0, 3, 4, 0, 1>)

